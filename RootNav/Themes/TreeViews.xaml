<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:measurement="clr-namespace:RootNav.Core.Measurement"
                    xmlns:controls="clr-namespace:RootNav.Interface.Controls">
    
    <measurement:UIColorConverter x:Key="colorConverter"/>
    <measurement:PointStringConverter x:Key="pointConverter"/>
    <measurement:RoundDoubleConverter x:Key="roundDouble1Converter" DP="1"/>
    <measurement:RoundDoubleConverter x:Key="roundDouble2Converter" DP="2"/>
    
    <Style x:Key="RootViewStyle" TargetType="{x:Type TreeView}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TreeView">
                    <ItemsPresenter HorizontalAlignment="Stretch"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TreeViewItemFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <PathGeometry x:Key="TreeArrow" Figures="M0,0 L0,6 L6,0 z"/>
    
    <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Width" Value="16"/>
        <Setter Property="Height" Value="16"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Width="16" Height="16" Background="Transparent" Padding="5,5,5,5">
                        <Path x:Name="ExpandPath" Fill="Transparent" Stroke="#FF989898" Data="{StaticResource TreeArrow}">
                            <Path.RenderTransform>
                                <RotateTransform Angle="135" CenterX="3" CenterY="3"/>
                            </Path.RenderTransform>
                        </Path>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Stroke" TargetName="ExpandPath" Value="#FF1BBBFA"/>
                            <Setter Property="Fill" TargetName="ExpandPath" Value="Transparent"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="RenderTransform" TargetName="ExpandPath">
                                <Setter.Value>
                                    <RotateTransform Angle="180" CenterX="3" CenterY="3"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Fill" TargetName="ExpandPath" Value="#FF595959"/>
                            <Setter Property="Stroke" TargetName="ExpandPath" Value="#FF262626"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RootItemStyle"  TargetType="TreeViewItem"
       BasedOn="{StaticResource {x:Type TreeViewItem}}">
        <Setter Property="HorizontalContentAlignment"
          Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TreeViewItem">
                    <StackPanel>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"
                                MinWidth="19" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                         
                            <ToggleButton IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                                ClickMode="Press"
                                Name="Expander">
                                <ToggleButton.Style>
                                    <Style TargetType="ToggleButton">
                                        <Setter Property="UIElement.Focusable"
                                            Value="false" />
                                        <Setter Property="FrameworkElement.Width"
                                            Value="16" />
                                        <Setter Property="FrameworkElement.Height"
                                            Value="16" />
                                        <Setter Property="Control.Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="ToggleButton">
                                                    <Border Padding="5,5,5,5"
                                                        Background="#00FFFFFF"
                                                        Width="16"
                                                        Height="16">
                                                        <Path Fill="#00FFFFFF"
                                                            Stroke="#FF989898"
                                                            Name="ExpandPath">
                                                            <Path.Data>
                                                                <PathGeometry Figures="M0,0L0,6L6,0z" />
                                                            </Path.Data>
                                                            <Path.RenderTransform>
                                                                <RotateTransform Angle="135"
                                               CenterX="3"
                                               CenterY="3" />
                                                            </Path.RenderTransform>
                                                        </Path>
                                                    </Border>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="UIElement.IsMouseOver"
                                   Value="True">
                                                            <Setter TargetName="ExpandPath"
                                    Property="Shape.Stroke"
                                    Value="#FF1BBBFA" />
                                                            <Setter TargetName="ExpandPath"
                                    Property="Shape.Fill"
                                    Value="#00FFFFFF" />
                                                        </Trigger>
                                                        <Trigger Property="ToggleButton.IsChecked"
                                   Value="True">
                                                            <Setter TargetName="ExpandPath"
                                    Property="UIElement.RenderTransform">
                                                                <Setter.Value>
                                                                    <RotateTransform Angle="180"
                                                 CenterX="3"
                                                 CenterY="3" />
                                                                </Setter.Value>
                                                            </Setter>
                                                            <Setter TargetName="ExpandPath"
                                    Property="Shape.Fill"
                                    Value="#FF595959" />
                                                            <Setter TargetName="ExpandPath"
                                    Property="Shape.Stroke"
                                    Value="#FF262626" />
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ToggleButton.Style>
                            </ToggleButton>
                            <Border x:Name="Bd"
                                HorizontalAlignment="Stretch"
                                BorderThickness="{TemplateBinding Border.BorderThickness}"
                                BorderBrush="{TemplateBinding Border.BorderBrush}"
                                Padding="{TemplateBinding Control.Padding}"
                                SnapsToDevicePixels="True"
                                Grid.Column="1">
                                <Grid Margin="3 3 3 0">
                                    <ContentPresenter x:Name="PART_Header"
                                        Content="{TemplateBinding HeaderedContentControl.Header}"
                                        ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}"
                                        ContentStringFormat="{TemplateBinding HeaderedItemsControl.HeaderStringFormat}"
                                        ContentTemplateSelector="{TemplateBinding HeaderedItemsControl.HeaderTemplateSelector}"
                                        ContentSource="Header"
                                        HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                        SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                                </Grid>
                            </Border>
                            <ItemsPresenter x:Name="ItemsHost"
                            Grid.Column="1"
                            Grid.Row="1" />
                        </Grid>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TreeViewItem.IsExpanded"
                            Value="False">
                            <Setter TargetName="ItemsHost"
                                Property="UIElement.Visibility"
                                Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="ItemsControl.HasItems"
                            Value="False">
                            <Setter TargetName="Expander"
                                Property="UIElement.Visibility"
                                Value="Hidden" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="IsSelected"
                        Value="{Binding IsSelected, Mode=TwoWay}" />
    </Style>

    <HierarchicalDataTemplate x:Key="HierarchicalRootTemplate" DataType="{x:Type measurement:RootBase}"
                        ItemsSource="{Binding Children}"
                        >
        <Border Name="mainBorder" HorizontalAlignment="Stretch" CornerRadius="4" BorderThickness="1" BorderBrush="#707070" Background="{Binding Color, Converter={StaticResource colorConverter}}">
            <Grid>
                <Border BorderThickness="0" Name="glossRectangle">
                    <Border.Background>
                        <SolidColorBrush x:Name="glossBrush" Color="#33FFFFFF"/>
                    </Border.Background>
                </Border>
                
                <Border Name="topShadowBorder" Opacity="0" CornerRadius="4" HorizontalAlignment="Stretch" VerticalAlignment="Top" Height="2.5">
                    <Border.Background>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                            <GradientStop Offset="0" Color="#60000000"/>
                            <GradientStop Offset="1" Color="#10000000"/>
                        </LinearGradientBrush>
                    </Border.Background>
                </Border>
                <Border Name="leftShadowBorder" Opacity="0" CornerRadius="4" HorizontalAlignment="Left" VerticalAlignment="Stretch" Width="2.5">
                    <Border.Background>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                            <GradientStop Offset="0" Color="#60000000"/>
                            <GradientStop Offset="1" Color="#10000000"/>
                        </LinearGradientBrush>
                    </Border.Background>
                </Border>
                
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="30"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Border Grid.Column="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" BorderThickness="0 0 1 0" BorderBrush="#707070">
                        <Label Name="idl" Foreground="Black" Padding="0" Margin="0" FontSize="10" IsHitTestVisible="False" HorizontalContentAlignment="Center" VerticalAlignment="Center" FontWeight="Bold" Content="{Binding Path=RelativeID}"/>
                    </Border>
                    <Grid Name="maingrid" Margin="3" Grid.Column="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="col1" Width="Auto"/>
                            <ColumnDefinition x:Name="col2" Width= "Auto"/>
                            <ColumnDefinition x:Name="col3" Width="Auto"/>
                            <ColumnDefinition x:Name="col4" Width= "*"/>
                        </Grid.ColumnDefinitions>

                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <TextBlock Name="pr1" Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="0" Text="Primary Root" Visibility="Collapsed" FontWeight="Bold" />

                        <TextBox Style="{StaticResource labelBox}" Grid.Column="0" Grid.ColumnSpan="4" Grid.Row="0" Name="propertyBox"
                                 FontSize="10" Height="18" Text="{Binding Path=Label}">
                        </TextBox>

                        <TextBlock Name="le1"  Grid.Column="0" Grid.Row="1" Text="Length: " />
                        <TextBlock Name="le2"  Grid.Column="1" Grid.Row="1" Text="{Binding Path=Length, Converter={StaticResource roundDouble2Converter}}" />

                        <TextBlock Name="lc1" Grid.Column="2" Grid.Row="1" Visibility="Collapsed" Text="  Laterals: " />
                        <TextBlock Name="lc2" Grid.Column="3" Grid.Row="1" Visibility="Collapsed" Text="{Binding Path=Children.Count}" />

                        <TextBlock Name="pc1" Grid.Column="2" Grid.Row="1" Visibility="Collapsed" Text="  Primary Roots: " />
                        <TextBlock Name="pc2" Grid.Column="3" Grid.Row="1" Visibility="Collapsed" Text="{Binding Path=Children.Count}" />

                        <TextBlock Name="ha1"  Grid.Column="0" Grid.Row="2" Text="Area: " Visibility="Collapsed"/>
                        <TextBlock Name="ha2"  Grid.Column="1" Grid.Row="2" Text="{Binding Path=ConvexHullArea, Converter={StaticResource roundDouble1Converter}}" Visibility="Collapsed"/>

                        <TextBlock Name="ea1"  Grid.Column="0" Grid.Row="2" Text="Angle: " />
                        <TextBlock Name="ea2"  Grid.Column="1" Grid.Row="2" Text="{Binding Path=EmergenceAngle, Converter={StaticResource roundDouble1Converter}}" />

                        <TextBlock Name="ta1"  Grid.Column="2" Grid.Row="2" Text="  Tip Angle: " />
                        <TextBlock Name="ta2"  Grid.Column="3" Grid.Row="2" Text="{Binding Path=TipAngle, Converter={StaticResource roundDouble1Converter}}" />

                    </Grid>
                </Grid>
            </Grid>
        </Border>
        <HierarchicalDataTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=Order}" Value="-1">
                <DataTrigger.Setters>
                    <Setter TargetName="idl" Property="FontSize" Value="12"/>
                    
                    <Setter TargetName="pr1" Property="Visibility" Value="Visible"/>
                    <Setter TargetName="pr1" Property="Text" Value="Plant"/>
                    <Setter TargetName="pc1" Property="Visibility" Value="Visible"/>
                    <Setter TargetName="pc2" Property="Visibility" Value="Visible"/>
                    <Setter TargetName="ha1" Property="Visibility" Value="Visible"/>
                    <Setter TargetName="ha2" Property="Visibility" Value="Visible"/>

                    <Setter TargetName="ea1" Property="Visibility" Value="Collapsed"/>
                    <Setter TargetName="ea2" Property="Visibility" Value="Collapsed"/>
                    <Setter TargetName="ta1" Property="Visibility" Value="Collapsed"/>
                    <Setter TargetName="ta2" Property="Visibility" Value="Collapsed"/>

                    <Setter TargetName="mainBorder" Property="HorizontalAlignment" Value="Stretch"/>

                    <Setter TargetName="propertyBox" Property="Grid.Column" Value="2"/>
                    <Setter TargetName="propertyBox" Property="Grid.ColumnSpan" Value="2"/>
                </DataTrigger.Setters>
            </DataTrigger>


            <DataTrigger Binding="{Binding Path=Order}" Value="0">
                <DataTrigger.Setters>
                    <Setter TargetName="idl" Property="FontSize" Value="11"/>
                    <Setter TargetName="pr1" Property="Visibility" Value="Visible"/>
                    <Setter TargetName="lc1" Property="Visibility" Value="Visible"/>
                    <Setter TargetName="lc2" Property="Visibility" Value="Visible"/>
                    <Setter TargetName="mainBorder" Property="HorizontalAlignment" Value="Stretch"/>

                    <Setter TargetName="propertyBox" Property="Grid.Column" Value="2"/>
                    <Setter TargetName="propertyBox" Property="Grid.ColumnSpan" Value="2"/>
                    <Setter TargetName="propertyBox" Property="Margin" Value="4 0 0 0"/>
                </DataTrigger.Setters>
            </DataTrigger>

            <DataTrigger Binding="{Binding Path=IsHighlighted}" Value="True">
                <DataTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Duration="0:0:0.2" Storyboard.TargetName="glossBrush" Storyboard.TargetProperty="Color" From="#33FFFFFF" To="#66FFFFFF"/>
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Duration="0:0:0.2" Storyboard.TargetName="glossBrush" Storyboard.TargetProperty="Color" From="#66FFFFFF" To="#33FFFFFF"/>
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.ExitActions>
            </DataTrigger>

            <DataTrigger Binding="{Binding Path=IsSelected}" Value="True">
                <DataTrigger.Setters>
                    <Setter TargetName="glossRectangle" Property="Background" Value="Transparent"/>
                    <Setter TargetName="topShadowBorder" Property="Opacity" Value="1"/>
                    <Setter TargetName="leftShadowBorder" Property="Opacity" Value="1"/>
                </DataTrigger.Setters>
            </DataTrigger>
        </HierarchicalDataTemplate.Triggers>
    </HierarchicalDataTemplate>
</ResourceDictionary>
    